version: "3.9"

services:
  tokenizer:
    build:
      context: ./vault
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    environment:
      - PORT=${PORT}
    depends_on:
      - redis
      - elasticsearch
      - kibana
      - access-service

  access-service:
    build:
      context: ./AccessService
    ports:
      - "5000:5000"
    restart: unless-stopped
    depends_on:
      - policy-service
      - consent-service

  consent-service:
    build:
      context: ./ConsentService
    ports:
      - "4000:4000"
    restart: unless-stopped
    depends_on:
      - postgres

  policy-service:
    image: openpolicyagent/opa:latest
    volumes:
      - ./PolicyEngine:/policy
    command: "run --server --set=decision_logs.console=true /policy/data-access.rego"
    ports:
      - "8181:8181"
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: ["redis-server", "--notify-keyspace-events", "Ex"]

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: consentdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

volumes:
  esdata:
  pgdata:
